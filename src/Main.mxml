<?xml version="1.0"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
               xmlns:s="library://ns.adobe.com/flex/spark"
               xmlns:mx="library://ns.adobe.com/flex/mx"
                preinitialize="{preInitializeHandler(event)}">
    <fx:Script><![CDATA[
        import mx.controls.Alert;
        import mx.core.FlexGlobals;
        import mx.formatters.NumberFormatter;
        import mx.rpc.events.FaultEvent;

        private var fr:FileReference;
        private var DOWNLOAD_URL:String = "http://www.education.gov.yk.ca/pdf/publications/yukon_secondary_programming_summary.pdf?a=2";
        private var _numberFormatter:NumberFormatter;

        [Bindable] public var downloadProgessString = "To continue, click below and choose where youâ€™d like to save your downlosad";

        private function preInitializeHandler(event:Event):void
        {
            if( !_numberFormatter )
            {
                _numberFormatter = new NumberFormatter();
                _numberFormatter.precision = 0;
            }
        }

        private function startDownload(event:Event=null):void
        {
            fr = new FileReference();
            fr.addEventListener(Event.OPEN, openHandler);
            fr.addEventListener(ProgressEvent.PROGRESS, progressHandler);
            fr.addEventListener(IOErrorEvent.IO_ERROR, ioFaultHandler);
            fr.addEventListener(Event.COMPLETE, completeHandler);
            fr.addEventListener(FaultEvent.FAULT, faultHandler);

            var request:URLRequest = new URLRequest();
            request.url = DOWNLOAD_URL;
            fr.download(request);
        }

        private function ioFaultHandler(event:IOErrorEvent):void
        {
            Alert.show("Remote file does not exist","IO Error",Alert.OK,FlexGlobals.topLevelApplication as Sprite,null);
        }

        private function faultHandler(event:FaultEvent):void
        {
            var fileReference:FileReference = event.target as FileReference;
            fileReference.removeEventListener(Event.OPEN, openHandler);
            fileReference.removeEventListener(ProgressEvent.PROGRESS, progressHandler);
            fileReference.removeEventListener(Event.COMPLETE, completeHandler);
            fileReference.removeEventListener(FaultEvent.FAULT, faultHandler);

            var faultString:String ="";
            if( event && event.fault )
            {
                faultString = event.fault.faultString;
            }

            downloadProgressBar.label = "Fault: " + faultString;
            cancelDownloadButton.enabled = false;
        }

        private function openHandler(event:Event):void
        {
            downloadProgressBar.label = "DOWNLOADING...";
            cancelDownloadButton.enabled = true;
        }

        private function progressHandler(event:ProgressEvent):void
        {
            downloadProgressBar.setProgress(event.bytesLoaded, event.bytesTotal);
            var percentageDownloaded = (event.bytesLoaded / event.bytesTotal) * 100;
            var formattedPercentage = _numberFormatter.format(percentageDownloaded);
            downloadProgessString = "Downloaded " + formattedPercentage + "%";
        }

        private function completeHandler(event:Event):void
        {
            downloadProgressBar.label = "DOWNLOAD COMPLETE";
            cancelDownloadButton.enabled = false;

            var myTimer:Timer = new Timer(3000, 1);
            myTimer.addEventListener(TimerEvent.TIMER_COMPLETE,
                    function(event:TimerEvent):void{
                        var u:URLRequest = new URLRequest("http://www.adobe.com/products/flex.html");
                        navigateToURL(u,"_self");
            });
            myTimer.start();
        }

        private function cancelDownload(event:Event=null):void
        {
            fr.cancel();

            fr.removeEventListener(Event.OPEN, openHandler);
            fr.removeEventListener(ProgressEvent.PROGRESS, progressHandler);
            fr.removeEventListener(Event.COMPLETE, completeHandler);
            fr.removeEventListener(FaultEvent.FAULT, faultHandler);
        }
        ]]></fx:Script>
    <s:Panel title="{downloadProgessString}" minWidth="450">
        <s:layout>
            <s:VerticalLayout verticalAlign="middle" horizontalAlign="center" />
        </s:layout>
        <mx:ProgressBar id="downloadProgressBar" label="" mode="manual" />
        <mx:ControlBar horizontalAlign="right">
            <mx:Button id="startDownloadButton" label="Download..." click="startDownload();" />
            <mx:Button id="cancelDownloadButton" label="Cancel" click="fr.cancel();" enabled="false" />
        </mx:ControlBar>
    </s:Panel>
</s:Application>
