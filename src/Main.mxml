<?xml version="1.0"?><s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"               xmlns:s="library://ns.adobe.com/flex/spark"               xmlns:mx="library://ns.adobe.com/flex/mx"               preinitialize="{preInitializeHandler(event)}"               applicationComplete="applicationCompleteHandler();">    <fx:Script><![CDATA[        import mx.controls.Alert;        import mx.core.FlexGlobals;        import mx.formatters.NumberFormatter;        import mx.rpc.events.FaultEvent;        private var fr:FileReference;        private var DOWNLOAD_URL:String = "http://www.education.gov.yk.ca/pdf/publications/yukon_secondary_programming_summary.pdf?a=2";        private var _numberFormatter:NumberFormatter;        private var flexGlobalsObject:Object;        private var downloadUrlBase:String;        private var downloadFile:String;        private var reportToUrl:String;        private var VERSION:String = "2.1.0";        [Bindable]        private var dlTitle:String;        [Bindable]        private var versionToolTipEnabled:Boolean;        [Bindable]        public var downloadProgressString = "To continue, click below and choose where youâ€™d like to save your download";        private function preInitializeHandler(event:Event):void {            if (!_numberFormatter) {                _numberFormatter = new NumberFormatter();                _numberFormatter.precision = 0;            }        }        private function applicationCompleteHandler(event:Event = null) {            flexGlobalsObject = new Object();            flexGlobalsObject = FlexGlobals.topLevelApplication;            downloadUrlBase = flexGlobalsObject.parameters.downloadUrlBase;            downloadFile = flexGlobalsObject.parameters.downloadFile;            reportToUrl = flexGlobalsObject.parameters.reportToUrl;            dlTitle = flexGlobalsObject.parameters.dlTitle;        }        private function startDownload(event:Event = null):void {            fr = new FileReference();            fr.addEventListener(Event.OPEN, openHandler);            fr.addEventListener(ProgressEvent.PROGRESS, progressHandler);            fr.addEventListener(IOErrorEvent.IO_ERROR, ioFaultHandler);            fr.addEventListener(Event.COMPLETE, completeHandler);            fr.addEventListener(FaultEvent.FAULT, faultHandler);            var request:URLRequest = new URLRequest();            request.url = downloadUrlBase;            fr.download(request);        }        private function ioFaultHandler(event:IOErrorEvent):void {            Alert.show("Remote file does not exist", "IO Error", Alert.OK, FlexGlobals.topLevelApplication as Sprite, null);        }        private function faultHandler(event:FaultEvent):void {            var fileReference:FileReference = event.target as FileReference;            fileReference.removeEventListener(Event.OPEN, openHandler);            fileReference.removeEventListener(ProgressEvent.PROGRESS, progressHandler);            fileReference.removeEventListener(Event.COMPLETE, completeHandler);            fileReference.removeEventListener(FaultEvent.FAULT, faultHandler);            var faultString:String = "";            if (event && event.fault) {                faultString = event.fault.faultString;            }            downloadProgressBar.label = "Fault: " + faultString;            cancelDownloadButton.enabled = false;        }        private function openHandler(event:Event):void {            downloadProgressBar.label = "DOWNLOADING...";            cancelDownloadButton.enabled = true;        }        private function progressHandler(event:ProgressEvent):void {            downloadProgressBar.setProgress(event.bytesLoaded, event.bytesTotal);            var percentageDownloaded = (event.bytesLoaded / event.bytesTotal) * 100;            var formattedPercentage = _numberFormatter.format(percentageDownloaded);            downloadProgressString = "Downloaded " + formattedPercentage + "%";        }        private function completeHandler(event:Event):void {            downloadProgressBar.label = "DOWNLOAD COMPLETE";            cancelDownloadButton.enabled = false;            fr.removeEventListener(Event.OPEN, openHandler);            fr.removeEventListener(ProgressEvent.PROGRESS, progressHandler);            fr.removeEventListener(Event.COMPLETE, completeHandler);            fr.removeEventListener(FaultEvent.FAULT, faultHandler);            fr.removeEventListener(IOErrorEvent.IO_ERROR, ioFaultHandler);            var myTimer:Timer = new Timer(3000, 1);            myTimer.addEventListener(TimerEvent.TIMER_COMPLETE,                    function (event:TimerEvent):void {                        var u:URLRequest = new URLRequest(reportToUrl);                        u.method = URLRequestMethod.POST;                        navigateToURL(u, "_self");                    });            myTimer.start();        }        private function cancelDownload(event:Event = null):void {            fr.cancel();            fr.removeEventListener(Event.OPEN, openHandler);            fr.removeEventListener(ProgressEvent.PROGRESS, progressHandler);            fr.removeEventListener(Event.COMPLETE, completeHandler);            fr.removeEventListener(FaultEvent.FAULT, faultHandler);            fr.removeEventListener(IOErrorEvent.IO_ERROR, ioFaultHandler);        }        private function handleDoubleClick(event:Event = null):void {            panel.toolTip == null ? panel.toolTip = "Downloader version: " + VERSION : panel.toolTip = null;        }        ]]></fx:Script>    <s:Panel id="panel" title="{downloadProgressString}" width="100%" dropShadowVisible="false"             doubleClickEnabled="true" doubleClick="{handleDoubleClick(event)}">        <s:layout>            <s:VerticalLayout verticalAlign="middle" horizontalAlign="center"/>        </s:layout>        <mx:ProgressBar id="downloadProgressBar" label="" mode="manual"/>        <mx:ControlBar horizontalAlign="right">            <mx:Button id="startDownloadButton" label="Download..." click="startDownload();"/>            <mx:Button id="cancelDownloadButton" label="Cancel" click="fr.cancel();" enabled="false"/>        </mx:ControlBar>    </s:Panel></s:Application>